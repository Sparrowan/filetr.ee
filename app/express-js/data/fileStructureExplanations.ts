export interface ExplanationItem {
	title: string;
	icon: "folder" | "file";
	description: string;
}

export const basicExplanations: ExplanationItem[] = [
	{
		title: "node_modules",
		icon: "folder",
		description:
			"Contains all installed dependencies and packages from npm. This folder is auto-generated by running `npm install`.",
	},
	{
		title: "public",
		icon: "folder",
		description:
			"Stores static assets like images, stylesheets, and JavaScript files accessible by the client.",
	},
	{
		title: "favicon.ico",
		icon: "file",
		description:
			"A small icon displayed in the browser tab representing the website.",
	},
	{
		title: "src",
		icon: "folder",
		description:
			"Holds the main source code of the application, including routes, controllers, models, and middleware.",
	},
	{
		title: "controllers",
		icon: "folder",
		description:
			"Contains route handlers that process incoming requests and return responses.",
	},
	{
		title: "userController.js",
		icon: "file",
		description:
			"Handles user-related logic, such as authentication, registration, and profile management.",
	},
	{
		title: "models",
		icon: "folder",
		description:
			"Defines database schemas and structures for storing and retrieving data.",
	},
	{
		title: "user.js",
		icon: "file",
		description:
			"Defines the schema and model for users, including fields like name, email, and password.",
	},
	{
		title: "middlewares",
		icon: "folder",
		description:
			"Contains middleware functions that process requests before they reach the controller.",
	},
	{
		title: "authMiddleware.js",
		icon: "file",
		description:
			"Checks authentication and authorization for protected routes.",
	},
	{
		title: "routes",
		icon: "folder",
		description: "Defines application routes and maps them to controllers.",
	},
	{
		title: "userRoutes.js",
		icon: "file",
		description:
			"Contains user-related routes, such as login, signup, and profile endpoints.",
	},
	{
		title: "app.js",
		icon: "file",
		description:
			"Main application file where Express is initialized, middleware is set up, and routes are registered.",
	},
	{
		title: "package.json",
		icon: "file",
		description:
			"Holds metadata about the project, dependencies, scripts, and configurations.",
	},
	{
		title: "README.md",
		icon: "file",
		description:
			"Project documentation with information on how to install, run, and use the application.",
	},
];
